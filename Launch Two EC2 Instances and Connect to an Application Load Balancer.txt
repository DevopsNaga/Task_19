# Provider configuration
provider "aws" {
  region = "us-west-2"
}

# VPC and Subnet data sources (default)
data "aws_vpc" "default" {
  default = true
}

data "aws_subnet_ids" "default" {
  vpc_id = data.aws_vpc.default.id
}

# Security Group for EC2 instances
resource "aws_security_group" "allow_http" {
  vpc_id = data.aws_vpc.default.id
  name   = "allow_http"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Open HTTP access
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Launch two EC2 instances
resource "aws_instance" "web" {
  count         = 2
  ami           = "ami-0c55b159cbfafe1f0"  # Amazon Linux 2 AMI (Change as per region)
  instance_type = "t2.micro"

  subnet_id        = element(data.aws_subnet_ids.default.ids, count.index)
  security_groups  = [aws_security_group.allow_http.name]
  key_name         = "my_key"  # Ensure you have an existing key pair or create one

  user_data = <<-EOF
              #!/bin/bash
              sudo yum install -y httpd
              sudo systemctl start httpd
              sudo systemctl enable httpd
              echo "Hello from instance ${count.index + 1}" > /var/www/html/index.html
              EOF

  tags = {
    Name = "WebServer-${count.index + 1}"
  }
}

# Create an Application Load Balancer
resource "aws_lb" "my_alb" {
  name               = "my-alb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.allow_http.id]
  subnets            = data.aws_subnet_ids.default.ids

  enable_deletion_protection = false
}

# Target group for the ALB
resource "aws_lb_target_group" "my_target_group" {
  name     = "my-targets"
  port     = 80
  protocol = "HTTP"
  vpc_id   = data.aws_vpc.default.id
  target_type = "instance"
}

# Attach EC2 instances to the target group
resource "aws_lb_target_group_attachment" "web_instances" {
  count            = 2
  target_group_arn = aws_lb_target_group.my_target_group.arn
  target_id        = aws_instance.web[count.index].id
  port             = 80
}

# ALB Listener
resource "aws_lb_listener" "http_listener" {
  load_balancer_arn = aws_lb.my_alb.arn
  port              = "80"
  protocol          = "HTTP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.my_target_group.arn
  }
}

# Output Load Balancer DNS
output "alb_dns_name" {
  value = aws_lb.my_alb.dns_name
}
